#The Facebook app credentials for supporting Facebook login
facebook.clientId=133718006790561
facebook.clientSecret=2f489f0978614f958101b3d6b1776990

#encryption keys to use for encrypt/decrypt functions
security.encryptPassword=yoursecurepassword!!!
crypto.hash.salt=45ea2b40ef910eef32
crypto.hash.iterations=1000

#if true all authorized requests will need to be signed and include the appropriate header fields.
#See com.porterheadead.rest.authorization.impl.RequestSigningAuthorizationService
security.authorization.requireSignedRequests=true

#How long in minutes before removing inactive session tokens
#See com.porterheadead.rest.user.SessionReaper
session.timeToLive.inMinutes=120

#How long in minutes to allow the request timestamp to differ from the server time
session.date.offset.inMinutes=15

#How long in minutes that the email registration token should remain active
token.emailRegistration.timeToLive.inMinutes=1440

#How long in minutes that the email verification token should remain active
token.emailVerification.timeToLive.inMinutes=1440

#How long in minutes that the lost password token should remain active
token.lostPassword.timeToLive.inMinutes=30

#The address that mail sent to users will see as the from
email.services.fromAddress=foo@example.com

#The address that mail sent to users will see as the replyTo
email.services.replyTo=foo@example.com

#Email subject text for the various emails sent
email.services.emailVerificationSubjectText=[Java-REST sample application] Please verify your email Address
email.services.emailRegistrationSubjectText=Welcome to the Java-REST sample application
email.services.lostPasswordSubjectText=[Java-REST sample application] Reset Password

#Users roles
user.usergroup.rest=ROLE_REST
user.usergroup.admin=ROLE_ADMIN
user.usergroup.social=ROLE_SOCIAL
user.usergroup.authenticated=ROLE_AUTHENTICATED

crypto.hash.salt=d8a8e885-ecce-42bb-8332-894f20f0d8ed
crypto.hash.iterations=1000
